"use client"
import React, { useState, useEffect } from 'react'
import { Web3Button } from '@web3modal/react'
import { useNetwork } from 'wagmi'
import ABI from '../components/abi.json'
import { useAccount, useContractRead } from 'wagmi'

import Header from '../components/header'
import Link from 'next/link'
import './register.css'
import '../Check/check.css'
import { sepolia, polygon } from 'wagmi/chains'

import { Web3NetworkSwitch } from '@web3modal/react'
import { useWeb3Modal } from '@web3modal/react'
import { useWeb3ModalTheme } from '@web3modal/react'

export default function Registeration() {
  const { chain } = useNetwork()
  const [inputValue, setInputValue] = useState("")
  const { theme, setTheme } = useWeb3ModalTheme()


  function handleChange(event) {
    const Value = event.target.value;
    if(Value.length>=3){
        document.getElementById('regoutput').innerHTML=''
        setInputValue(Value);

    }
    else{
        document.getElementById('regoutput').innerHTML='Domain contain minimum 3 character'
    
        setInputValue("")
    }
  }

  

  function checkAvailability() {
    if (!data) {
      document.getElementById('output').innerHTML = "Domain Is Available"
    } else {
      document.getElementById('output').innerHTML = "Domain Is Not Available"
    }
  }

  // Move useContractRead inside useEffect to prevent server-side rendering
    const { data } = useContractRead({
      address: '0x25F820cA35fd0f258C40693953513C6EFcA8f493',
      abi: ABI,
      functionName: 'isEmailRegisteredByEmail',
      args: [inputValue + '.one'],
    })
 

  setTheme({
    themeMode: 'dark',
    themeVariables: {
      '--w3m-font-family': 'Roboto, sans-serif',
      '--w3m-accent-color': '#B800F8',
      '--w3m-button-border-radius': '20px',
      '--wcm-text-big-bold-size': '5px',
      // ...
    },
  })

  return (
    <div className='Register'>
      <div className='Registerc'>
        <header className='header'>
          <Header />
        </header>
        <div className='rbody'>
          <div className='buttonc'>
            {chain && !(chain.name == sepolia) && <Web3NetworkSwitch themeVariables={theme} />}
            <Web3Button themeVariables={theme} />
          </div>
          <div className='field'>
            <input className='rsearch' placeholder='Check Domain Availability' value={inputValue} onChange={handleChange} id='reginput' ></input>
            <div className='data' id='regoutput'></div>
            <br />
            {inputValue.length >= 3 && <button className='cbuttont' onClick={checkAvailability} id='checkbutton'>Check Availability</button>}
          </div>
        </div>
      </div>
    </div>
  )
}
